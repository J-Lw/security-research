{"abi":[{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Axicon Labs Limited\",\"details\":\"Does not include return values as certain tokens such as USDT fail to implement themSince the return value is not expected, this interface works with both compliant and non-compliant tokensClients are recommended to consume and handle the return of negative success valuesHowever, we cannot productively handle a failed approval and such a situation would surely cause a revert later in executionIn addition, no notable instances exist of tokens that both i) contain a failure case for `approve` and ii) return `false` instead of reverting\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"While this function is specified to return a boolean value in the EIP, this interface does not expect one\",\"params\":{\"amount\":\"The amount of tokens allowed to be spent\",\"spender\":\"The address which will spend the funds\"}},\"balanceOf(address)\":{\"details\":\"This function is unchanged from the EIP\",\"params\":{\"account\":\"The address to query the balance of\"},\"returns\":{\"_0\":\"The amount of tokens owned by `account`\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens to transfer\",\"to\":\"the user to transfer tokens to\"}}},\"title\":\"Partial definition of the ERC20 interface as defined in the EIP\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers tokens from the caller to another user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/testUtils/IERC20Partial.sol\":\"IERC20Partial\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":18000},\"remappings\":[\":@contracts/=contracts/\",\":@libraries/=contracts/libraries/\",\":@multicall/=contracts/multicall/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@periphery/=contracts/periphery/\",\":@scripts/=scripts/\",\":@testUtils/=test/foundry/testUtils/\",\":@tokens/=contracts/tokens/\",\":@types/=contracts/types/\",\":@uniswap/=lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":univ3-core/=lib/v3-core/contracts/\",\":univ3-periphery/=lib/v3-periphery/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"test/foundry/testUtils/IERC20Partial.sol\":{\"keccak256\":\"0xebabfd4b940861b4906e08e940e2fb70c55cdaa5149bef293742736f3ac069c8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1a9036ec66b27342da493b4ceb961b4af291b95c0fba7ac54671312eef725c3c\",\"dweb:/ipfs/QmdKWDoASRtGms71FyKhDA1VPeuBqjhYpCqAvvUFhYT1K7\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"While this function is specified to return a boolean value in the EIP, this interface does not expect one","params":{"amount":"The amount of tokens allowed to be spent","spender":"The address which will spend the funds"}},"balanceOf(address)":{"details":"This function is unchanged from the EIP","params":{"account":"The address to query the balance of"},"returns":{"_0":"The amount of tokens owned by `account`"}},"transfer(address,uint256)":{"params":{"amount":"the amount of tokens to transfer","to":"the user to transfer tokens to"}}},"version":1},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"Sets `amount` as the allowance of `spender` over the caller's tokens"},"balanceOf(address)":{"notice":"Returns the amount of tokens owned by `account`"},"transfer(address,uint256)":{"notice":"Transfers tokens from the caller to another user"}},"version":1}},"settings":{"remappings":["@contracts/=contracts/","@libraries/=contracts/libraries/","@multicall/=contracts/multicall/","@openzeppelin/=lib/openzeppelin-contracts/","@periphery/=contracts/periphery/","@scripts/=scripts/","@testUtils/=test/foundry/testUtils/","@tokens/=contracts/tokens/","@types/=contracts/types/","@uniswap/=lib/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/","univ3-core/=lib/v3-core/contracts/","univ3-periphery/=lib/v3-periphery/contracts/","v3-core/=lib/v3-core/contracts/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":18000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/foundry/testUtils/IERC20Partial.sol":"IERC20Partial"},"libraries":{}},"sources":{"test/foundry/testUtils/IERC20Partial.sol":{"keccak256":"0xebabfd4b940861b4906e08e940e2fb70c55cdaa5149bef293742736f3ac069c8","urls":["bzz-raw://1a9036ec66b27342da493b4ceb961b4af291b95c0fba7ac54671312eef725c3c","dweb:/ipfs/QmdKWDoASRtGms71FyKhDA1VPeuBqjhYpCqAvvUFhYT1K7"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"test/foundry/testUtils/IERC20Partial.sol","id":70150,"exportedSymbols":{"IERC20Partial":[70149]},"nodeType":"SourceUnit","src":"45:1678:81","nodes":[{"id":70123,"nodeType":"PragmaDirective","src":"45:23:81","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":70149,"nodeType":"ContractDefinition","src":"766:956:81","nodes":[{"id":70132,"nodeType":"FunctionDefinition","src":"1028:68:81","nodes":[],"documentation":{"id":70125,"nodeType":"StructuredDocumentation","src":"796:227:81","text":"@notice Returns the amount of tokens owned by `account`\n @dev This function is unchanged from the EIP\n @param account The address to query the balance of\n @return The amount of tokens owned by `account`"},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1037:9:81","parameters":{"id":70128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70127,"mutability":"mutable","name":"account","nameLocation":"1055:7:81","nodeType":"VariableDeclaration","scope":70132,"src":"1047:15:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70126,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:81","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1046:17:81"},"returnParameters":{"id":70131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70132,"src":"1087:7:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:9:81"},"scope":70149,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":70140,"nodeType":"FunctionDefinition","src":"1431:59:81","nodes":[],"documentation":{"id":70133,"nodeType":"StructuredDocumentation","src":"1102:324:81","text":"@notice Sets `amount` as the allowance of `spender` over the caller's tokens\n @dev While this function is specified to return a boolean value in the EIP, this interface does not expect one\n @param spender The address which will spend the funds\n @param amount The amount of tokens allowed to be spent"},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1440:7:81","parameters":{"id":70138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70135,"mutability":"mutable","name":"spender","nameLocation":"1456:7:81","nodeType":"VariableDeclaration","scope":70140,"src":"1448:15:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70134,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:81","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70137,"mutability":"mutable","name":"amount","nameLocation":"1473:6:81","nodeType":"VariableDeclaration","scope":70140,"src":"1465:14:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1447:33:81"},"returnParameters":{"id":70139,"nodeType":"ParameterList","parameters":[],"src":"1489:0:81"},"scope":70149,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":70148,"nodeType":"FunctionDefinition","src":"1665:55:81","nodes":[],"documentation":{"id":70141,"nodeType":"StructuredDocumentation","src":"1496:164:81","text":"@notice Transfers tokens from the caller to another user\n @param to the user to transfer tokens to\n @param amount the amount of tokens to transfer"},"functionSelector":"a9059cbb","implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1674:8:81","parameters":{"id":70146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70143,"mutability":"mutable","name":"to","nameLocation":"1691:2:81","nodeType":"VariableDeclaration","scope":70148,"src":"1683:10:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70142,"name":"address","nodeType":"ElementaryTypeName","src":"1683:7:81","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70145,"mutability":"mutable","name":"amount","nameLocation":"1703:6:81","nodeType":"VariableDeclaration","scope":70148,"src":"1695:14:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:28:81"},"returnParameters":{"id":70147,"nodeType":"ParameterList","parameters":[],"src":"1719:0:81"},"scope":70149,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC20Partial","contractDependencies":[],"contractKind":"interface","documentation":{"id":70124,"nodeType":"StructuredDocumentation","src":"70:696:81","text":"@title Partial definition of the ERC20 interface as defined in the EIP\n @dev Does not include return values as certain tokens such as USDT fail to implement them\n @dev Since the return value is not expected, this interface works with both compliant and non-compliant tokens\n @dev Clients are recommended to consume and handle the return of negative success values\n @dev However, we cannot productively handle a failed approval and such a situation would surely cause a revert later in execution\n @dev In addition, no notable instances exist of tokens that both i) contain a failure case for `approve` and ii) return `false` instead of reverting\n @author Axicon Labs Limited"},"fullyImplemented":false,"linearizedBaseContracts":[70149],"name":"IERC20Partial","nameLocation":"776:13:81","scope":70150,"usedErrors":[]}],"license":"GPL-2.0-or-later"},"id":81}