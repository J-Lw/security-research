{"abi":[{"type":"function","name":"add","inputs":[{"name":"x","type":"uint256","internalType":"uint256"},{"name":"y","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"add","inputs":[{"name":"x","type":"int256","internalType":"int256"},{"name":"y","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"leftSlot","inputs":[{"name":"self","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"leftSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"view"},{"type":"function","name":"rightSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"view"},{"type":"function","name":"rightSlot","inputs":[{"name":"self","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"sub","inputs":[{"name":"x","type":"int256","internalType":"int256"},{"name":"y","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toInt128","inputs":[{"name":"self","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"view"},{"type":"function","name":"toInt256","inputs":[{"name":"self","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toLeftSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"},{"name":"left","type":"int128","internalType":"int128"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toLeftSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"},{"name":"left","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toLeftSlot","inputs":[{"name":"self","type":"uint256","internalType":"uint256"},{"name":"left","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toRightSlot","inputs":[{"name":"self","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toRightSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"},{"name":"right","type":"int128","internalType":"int128"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toRightSlot","inputs":[{"name":"self","type":"uint256","internalType":"uint256"},{"name":"right","type":"int128","internalType":"int128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toRightSlot","inputs":[{"name":"self","type":"int256","internalType":"int256"},{"name":"right","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toUint128","inputs":[{"name":"self","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"error","name":"CastingError","inputs":[]},{"type":"error","name":"LeftRightInputError","inputs":[]},{"type":"error","name":"UnderOverFlow","inputs":[]}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610724806100206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063c1ac56fc116100b2578063e08836b711610081578063eb10f67211610066578063eb10f67214610254578063ed38fd4b14610262578063f93ab7d51461027557600080fd5b8063e08836b714610241578063e265e7231461015457600080fd5b8063c1ac56fc146101e2578063cfe7dcd1146101f5578063dd2a03161461021b578063dfbe873b1461022e57600080fd5b806378e38789116100ee57806378e387891461017a578063809fdd3314610188578063a5f3c23b146101bc578063adefc37b146101cf57600080fd5b806320715ad81461012057806332ee4ff414610146578063632c44df14610154578063771602f714610167575b600080fd5b61013361012e366004610644565b610288565b6040519081526020015b60405180910390f35b61013361012e366004610690565b610133610162366004610690565b6102a1565b6101336101753660046106b3565b6102be565b610133610162366004610644565b61019b6101963660046106d5565b6102cb565b6040516fffffffffffffffffffffffffffffffff909116815260200161013d565b6101336101ca3660046106b3565b6102de565b6101336101dd3660046106b3565b6102eb565b61019b6101f03660046106d5565b6102f8565b6102086102033660046106d5565b610305565b604051600f9190910b815260200161013d565b6102086102293660046106d5565b61030e565b61013361023c3660046106d5565b61031a565b61013361024f366004610644565b610326565b61019b6102033660046106d5565b610133610270366004610690565b610333565b6102086102833660046106d5565b610364565b600080610297848460801b0190565b9150505b92915050565b6000806fffffffffffffffffffffffffffffffff83168401610297565b6000806102978484610371565b6000806102d7836103dc565b9392505050565b600080610297848461042d565b60008061029784846104d1565b6000806102d78360801c90565b600080826102d7565b6000806102d78361054d565b6000806102d78361058b565b60008061029784846105eb565b600080610297848460801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000160190565b6000806102d78360801d90565b818101828110806103a55750826fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff16105b1561029b576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806fffffffffffffffffffffffffffffffff81168114610428576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008061043a8360801d90565b600f0b6104478560801d90565b600f0b01905080600084600f0b86600f0b01905060008190508383600f0b14158061047557508181600f0b14155b156104ac576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6fffffffffffffffffffffffffffffffff169390930160809190911b01949350505050565b6000806104de8360801d90565b600f0b6104eb8560801d90565b600f0b03905080600084600f0b86600f0b03905060008190508383600f0b14158061047557508181600f0b146104ac576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f81900b8114610428576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156105e7576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b60008082600f0b121561062a576040517fa6a3387a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600f0b0190565b8035600f81900b811461042857600080fd5b6000806040838503121561065757600080fd5b8235915061066760208401610632565b90509250929050565b80356fffffffffffffffffffffffffffffffff8116811461042857600080fd5b600080604083850312156106a357600080fd5b8235915061066760208401610670565b600080604083850312156106c657600080fd5b50508035926020909101359150565b6000602082840312156106e757600080fd5b503591905056fea2646970667358221220629803b533f96e027eb607f24ef7b021394ad822805017e81ebf68d5a982cd0964736f6c63430008120033","sourceMap":"342:8010:89:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061011b5760003560e01c8063c1ac56fc116100b2578063e08836b711610081578063eb10f67211610066578063eb10f67214610254578063ed38fd4b14610262578063f93ab7d51461027557600080fd5b8063e08836b714610241578063e265e7231461015457600080fd5b8063c1ac56fc146101e2578063cfe7dcd1146101f5578063dd2a03161461021b578063dfbe873b1461022e57600080fd5b806378e38789116100ee57806378e387891461017a578063809fdd3314610188578063a5f3c23b146101bc578063adefc37b146101cf57600080fd5b806320715ad81461012057806332ee4ff414610146578063632c44df14610154578063771602f714610167575b600080fd5b61013361012e366004610644565b610288565b6040519081526020015b60405180910390f35b61013361012e366004610690565b610133610162366004610690565b6102a1565b6101336101753660046106b3565b6102be565b610133610162366004610644565b61019b6101963660046106d5565b6102cb565b6040516fffffffffffffffffffffffffffffffff909116815260200161013d565b6101336101ca3660046106b3565b6102de565b6101336101dd3660046106b3565b6102eb565b61019b6101f03660046106d5565b6102f8565b6102086102033660046106d5565b610305565b604051600f9190910b815260200161013d565b6102086102293660046106d5565b61030e565b61013361023c3660046106d5565b61031a565b61013361024f366004610644565b610326565b61019b6102033660046106d5565b610133610270366004610690565b610333565b6102086102833660046106d5565b610364565b600080610297848460801b0190565b9150505b92915050565b6000806fffffffffffffffffffffffffffffffff83168401610297565b6000806102978484610371565b6000806102d7836103dc565b9392505050565b600080610297848461042d565b60008061029784846104d1565b6000806102d78360801c90565b600080826102d7565b6000806102d78361054d565b6000806102d78361058b565b60008061029784846105eb565b600080610297848460801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000160190565b6000806102d78360801d90565b818101828110806103a55750826fffffffffffffffffffffffffffffffff16816fffffffffffffffffffffffffffffffff16105b1561029b576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806fffffffffffffffffffffffffffffffff81168114610428576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008061043a8360801d90565b600f0b6104478560801d90565b600f0b01905080600084600f0b86600f0b01905060008190508383600f0b14158061047557508181600f0b14155b156104ac576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6fffffffffffffffffffffffffffffffff169390930160809190911b01949350505050565b6000806104de8360801d90565b600f0b6104eb8560801d90565b600f0b03905080600084600f0b86600f0b03905060008190508383600f0b14158061047557508181600f0b146104ac576040517fd219017400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600f81900b8114610428576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156105e7576040517fb668004500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b60008082600f0b121561062a576040517fa6a3387a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600f0b0190565b8035600f81900b811461042857600080fd5b6000806040838503121561065757600080fd5b8235915061066760208401610632565b90509250929050565b80356fffffffffffffffffffffffffffffffff8116811461042857600080fd5b600080604083850312156106a357600080fd5b8235915061066760208401610670565b600080604083850312156106c657600080fd5b50508035926020909101359150565b6000602082840312156106e757600080fd5b503591905056fea2646970667358221220629803b533f96e027eb607f24ef7b021394ad822805017e81ebf68d5a982cd0964736f6c63430008120033","sourceMap":"342:8010:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5820:153;;;;;;:::i;:::-;;:::i;:::-;;;581:25:92;;;569:2;554:18;5820:153:89;;;;;;;;5364:154;;;;;;:::i;1905:161::-;;;;;;:::i;:::-;;:::i;6353:131::-;;;;;;:::i;:::-;;:::i;3267:157::-;;;;;;:::i;7879:135::-;;;;;;:::i;:::-;;:::i;:::-;;;2123:34:92;2111:47;;;2093:66;;2081:2;2066:18;7879:135:89;1947:218:92;6670:127:89;;;;;;:::i;:::-;;:::i;7000:::-;;;;;;:::i;:::-;;:::i;3804:133::-;;;;;;:::i;:::-;;:::i;1103:132::-;;;;;;:::i;:::-;;:::i;:::-;;;2778:2:92;2767:22;;;;2749:41;;2737:2;2722:18;1103:132:89;2605:191:92;7535:130:89;;;;;;:::i;:::-;;:::i;8219:131::-;;;;;;:::i;:::-;;:::i;2361:160::-;;;;;;:::i;:::-;;:::i;760:135::-;;;;;;:::i;4905:157::-;;;;;;:::i;:::-;;:::i;4137:130::-;;;;;;:::i;:::-;;:::i;5820:153::-;5887:6;5905:8;5916:32;5937:4;5943;6337:3:10;6321:19;6313:28;;6195:163;5916:32:89;5905:43;-1:-1:-1;;5820:153:89;;;;;:::o;1905:161::-;1976:7;;2370:14:10;;;2363:21;;2007:34:89;2240:161:10;6353:131:89;6409:7;6428:9;6440:19;6454:1;6457;6440:13;:19::i;7879:135::-;7933:7;7952:9;7964:25;7984:4;7964:19;:25::i;:::-;7952:37;7879:135;-1:-1:-1;;;7879:135:89:o;6670:127::-;6724:6;6742:8;6753:19;6767:1;6770;6753:13;:19::i;7000:127::-;7054:6;7072:8;7083:19;7097:1;7100;7083:13;:19::i;3804:133::-;3857:7;3876:9;3888:24;3907:4;4358:3:10;4350:11;;4261:108;1103:132:89;1156:6;;1205:4;1185:25;1486:99:10;7535:130:89;7587:6;7605:8;7616:24;7635:4;7616:18;:24::i;8219:131::-;8272:6;8290:8;8301:24;8320:4;8301:18;:24::i;2361:160::-;2431:7;2450:9;2462:34;2484:4;2490:5;2462:21;:34::i;4905:157::-;4974:7;4993:9;5005:32;5026:4;5032;5428:3:10;5411:20;;;5403:29;;5282:167;4137:130:89;4189:6;4207:8;4218:24;4237:4;4648:3:10;4640:11;;4554:105;6726:607;7005:5;;;7251;;;;:34;;;7282:1;7261:23;;7269:1;7261:23;;;7251:34;7247:69;;;7294:22;;;;;;;;;;;;;;9438:172;9568:4;9533:39;;;;;9527:76;;9582:21;;;;;;;;;;;;;;9527:76;9438:172;;;:::o;7507:490::-;7563:8;7607:14;7647:12;:1;4648:3;4640:11;;4554:105;7647:12;7624:35;;7631:12;:1;4648:3;4640:11;;4554:105;7631:12;7624:20;;:35;;-1:-1:-1;7624:35:10;7673:14;7762:1;7738:37;;7745:1;7738:21;;:37;7720:55;;7789:15;7814:8;7789:34;;7853:7;7842;:18;;;;:42;;;;7876:8;7864;:20;;;;7842:42;7838:77;;;7893:22;;;;;;;;;;;;;;7838:77;2370:14;;2363:21;;;;6337:3;6321:19;;;;6313:28;;7930:50;-1:-1:-1;;;;7507:490:10:o;8188:::-;8244:8;8288:14;8328:12;:1;4648:3;4640:11;;4554:105;8328:12;8305:35;;8312:12;:1;4648:3;4640:11;;4554:105;8312:12;8305:20;;:35;;-1:-1:-1;8305:35:10;8354:14;8443:1;8419:37;;8426:1;8419:21;;:37;8401:55;;8470:15;8495:8;8470:34;;8534:7;8523;:18;;;;:42;;;;8557:8;8545;:20;;;8519:77;;8574:22;;;;;;;;;;;;;;9072:166;9196:4;9163:37;;;;;;9157:74;;9210:21;;;;;;;;;;;;;;9800:175;9855:6;9892:16;9877:4;:32;9873:66;;;9918:21;;;;;;;;;;;;;;9873:66;-1:-1:-1;9963:4:10;9800:175::o;2681:228::-;2753:7;2784:1;2776:5;:9;;;2772:50;;;2794:28;;;;;;;;;;;;;;2772:50;-1:-1:-1;2878:13:10;;2863:29;;2681:228::o;14:162:92:-;81:20;;141:2;130:21;;;120:32;;110:60;;166:1;163;156:12;181:251;247:6;255;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;360:9;347:23;337:33;;389:37;422:2;411:9;407:18;389:37;:::i;:::-;379:47;;181:251;;;;;:::o;617:188::-;685:20;;745:34;734:46;;724:57;;714:85;;795:1;792;785:12;810:253;877:6;885;938:2;926:9;917:7;913:23;909:32;906:52;;;954:1;951;944:12;906:52;990:9;977:23;967:33;;1019:38;1053:2;1042:9;1038:18;1019:38;:::i;1509:248::-;1577:6;1585;1638:2;1626:9;1617:7;1613:23;1609:32;1606:52;;;1654:1;1651;1644:12;1606:52;-1:-1:-1;;1677:23:92;;;1747:2;1732:18;;;1719:32;;-1:-1:-1;1509:248:92:o;1762:180::-;1821:6;1874:2;1862:9;1853:7;1849:23;1845:32;1842:52;;;1890:1;1887;1880:12;1842:52;-1:-1:-1;1913:23:92;;1762:180;-1:-1:-1;1762:180:92:o","linkReferences":{}},"methodIdentifiers":{"add(int256,int256)":"a5f3c23b","add(uint256,uint256)":"771602f7","leftSlot(int256)":"f93ab7d5","leftSlot(uint256)":"c1ac56fc","rightSlot(int256)":"cfe7dcd1","rightSlot(uint256)":"eb10f672","sub(int256,int256)":"adefc37b","toInt128(int256)":"dd2a0316","toInt256(uint256)":"dfbe873b","toLeftSlot(int256,int128)":"20715ad8","toLeftSlot(int256,uint128)":"32ee4ff4","toLeftSlot(uint256,uint128)":"ed38fd4b","toRightSlot(int256,int128)":"78e38789","toRightSlot(int256,uint128)":"e265e723","toRightSlot(uint256,int128)":"e08836b7","toRightSlot(uint256,uint128)":"632c44df","toUint128(uint256)":"809fdd33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CastingError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LeftRightInputError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnderOverFlow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"add\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"}],\"name\":\"leftSlot\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"}],\"name\":\"leftSlot\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"}],\"name\":\"rightSlot\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"}],\"name\":\"rightSlot\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"sub\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"}],\"name\":\"toInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"}],\"name\":\"toInt256\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"},{\"internalType\":\"int128\",\"name\":\"left\",\"type\":\"int128\"}],\"name\":\"toLeftSlot\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"},{\"internalType\":\"uint128\",\"name\":\"left\",\"type\":\"uint128\"}],\"name\":\"toLeftSlot\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"left\",\"type\":\"uint128\"}],\"name\":\"toLeftSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"right\",\"type\":\"uint128\"}],\"name\":\"toRightSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"},{\"internalType\":\"int128\",\"name\":\"right\",\"type\":\"int128\"}],\"name\":\"toRightSlot\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"right\",\"type\":\"int128\"}],\"name\":\"toRightSlot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"self\",\"type\":\"int256\"},{\"internalType\":\"uint128\",\"name\":\"right\",\"type\":\"uint128\"}],\"name\":\"toRightSlot\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"self\",\"type\":\"uint256\"}],\"name\":\"toUint128\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Axicon Labs Limited\",\"errors\":{\"CastingError()\":[{\"details\":\"e.g. uint128(uint256(a)) fails\"}]},\"kind\":\"dev\",\"methods\":{\"add(int256,int256)\":{\"params\":{\"x\":\"the augend\",\"y\":\"the addend\"},\"returns\":{\"_0\":\"z the sum x + y\"}},\"add(uint256,uint256)\":{\"params\":{\"x\":\"the augend\",\"y\":\"the addend\"},\"returns\":{\"_0\":\"z the sum x + y\"}},\"leftSlot(int256)\":{\"params\":{\"self\":\"The int256 (full 256 bits) to be cut in its left half.\"},\"returns\":{\"_0\":\"the left half (128 bits).\"}},\"leftSlot(uint256)\":{\"params\":{\"self\":\"The uint256 (full 256 bits) to be cut in its left half.\"},\"returns\":{\"_0\":\"the left half (128 bits).\"}},\"rightSlot(int256)\":{\"params\":{\"self\":\"The int256 (full 256 bits) to be cut in its right half.\"},\"returns\":{\"_0\":\"the right half self (128 bits).\"}},\"rightSlot(uint256)\":{\"params\":{\"self\":\"The uint256 (full 256 bits) to be cut in its right half.\"},\"returns\":{\"_0\":\"the right half of self (128 bits).\"}},\"sub(int256,int256)\":{\"params\":{\"x\":\"the minuend\",\"y\":\"the subtrahend\"},\"returns\":{\"_0\":\"z the difference x - y\"}},\"toInt128(int256)\":{\"params\":{\"self\":\"the int256 to be downcasted to int128.\"},\"returns\":{\"_0\":\"selfAsInt128 the downcasted integer, now of type int128\"}},\"toInt256(uint256)\":{\"params\":{\"self\":\"the uint256 to be downcasted to uint128.\"},\"returns\":{\"_0\":\"the incoming uint256 but now of type int256.\"}},\"toLeftSlot(int256,int128)\":{\"params\":{\"left\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full int256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with left added to its left 128 bits.\"}},\"toLeftSlot(int256,uint128)\":{\"params\":{\"left\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full int256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with left added to its left 128 bits.\"}},\"toLeftSlot(uint256,uint128)\":{\"params\":{\"left\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full uint256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with left added to its left 128 bits.\"}},\"toRightSlot(int256,int128)\":{\"params\":{\"right\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full int256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with right added to its right 128 bits.\"}},\"toRightSlot(int256,uint128)\":{\"params\":{\"right\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full int256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with right added to its right 128 bits.\"}},\"toRightSlot(uint256,int128)\":{\"params\":{\"right\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full uint256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with right added to its right 128 bits.\"}},\"toRightSlot(uint256,uint128)\":{\"params\":{\"right\":\"the bit pattern to write into the full pattern in the right half.\",\"self\":\"the original full uint256 bit pattern to be written to.\"},\"returns\":{\"_0\":\"self with incoming right added (not overwritten, but added) to its right 128 bits.\"}},\"toUint128(uint256)\":{\"params\":{\"self\":\"the uint256 to be downcasted to uint128.\"},\"returns\":{\"_0\":\"selfAsUint128 the downcasted uint256 now as uint128\"}}},\"title\":\"LeftRightHarness: A harness to expose the LeftRight library for code coverage analysis.\",\"version\":1},\"userdoc\":{\"errors\":{\"CastingError()\":[{\"notice\":\"Casting error\"}],\"LeftRightInputError()\":[{\"notice\":\"Invalid input in LeftRight library.\"}],\"UnderOverFlow()\":[{\"notice\":\"Under/Overflow has happened\"}]},\"kind\":\"user\",\"methods\":{\"add(int256,int256)\":{\"notice\":\"Add two int256 bit LeftRight-encoded words; revert on overflow.\"},\"add(uint256,uint256)\":{\"notice\":\"Add two uint256 bit LeftRight-encoded words; revert on overflow or underflow.\"},\"leftSlot(int256)\":{\"notice\":\"Get the \\\"left\\\" half from an int256 bit pattern.\"},\"leftSlot(uint256)\":{\"notice\":\"Get the \\\"left\\\" half from a uint256 bit pattern.\"},\"rightSlot(int256)\":{\"notice\":\"Get the \\\"right\\\" slot from an int256 bit pattern.\"},\"rightSlot(uint256)\":{\"notice\":\"Get the \\\"right\\\" slot from a uint256 bit pattern.\"},\"sub(int256,int256)\":{\"notice\":\"Subtract two int256 bit LeftRight-encoded words; revert on overflow.\"},\"toInt128(int256)\":{\"notice\":\"Cast an int256 to an int128, revert on overflow or underflow.\"},\"toInt256(uint256)\":{\"notice\":\"Cast a uint256 to an int256, revert on overflow\"},\"toLeftSlot(int256,int128)\":{\"notice\":\"Write the \\\"left\\\" slot to an int256 bit pattern.\"},\"toLeftSlot(int256,uint128)\":{\"notice\":\"Write the \\\"left\\\" slot to an int256 bit pattern.\"},\"toLeftSlot(uint256,uint128)\":{\"notice\":\"Write the \\\"left\\\" slot to a uint256 bit pattern.\"},\"toRightSlot(int256,int128)\":{\"notice\":\"Write the \\\"right\\\" slot to an int256.\"},\"toRightSlot(int256,uint128)\":{\"notice\":\"Write the \\\"right\\\" slot to an int256.\"},\"toRightSlot(uint256,int128)\":{\"notice\":\"Write the \\\"right\\\" slot to a uint256.\"},\"toRightSlot(uint256,uint128)\":{\"notice\":\"Write the \\\"right\\\" slot to a uint256.\"},\"toUint128(uint256)\":{\"notice\":\"Downcast uint256 to a uint128, revert on overflow\"}},\"notice\":\"Replicates the interface of the LeftRight library, passing through any function calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/types/harnesses/LeftRightHarness.sol\":\"LeftRightHarness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":18000},\"remappings\":[\":@contracts/=contracts/\",\":@libraries/=contracts/libraries/\",\":@multicall/=contracts/multicall/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@periphery/=contracts/periphery/\",\":@scripts/=scripts/\",\":@testUtils/=test/foundry/testUtils/\",\":@tokens/=contracts/tokens/\",\":@types/=contracts/types/\",\":@uniswap/=lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":univ3-core/=lib/v3-core/contracts/\",\":univ3-periphery/=lib/v3-periphery/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xc726df9eeff396c5f90d831ce0f22d13c1373efdc729418d58ab534b403d86fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8e98110a218b49dac5c8e0ab99892be1d3b4baf7490293314ff09e3eac14da7\",\"dweb:/ipfs/QmbSgGUiWfuN4mgghXpuPnVjYFL3pQkncv6FXoHWb8Wocv\"]},\"contracts/types/LeftRight.sol\":{\"keccak256\":\"0x66c7c6b550e11319f5e3b6ac45e4dc4bf12a2e3fae6c9ea5cf8a749fce343f2f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://488ee146168449606092504247b1ff89e47a12509a6af89e028e64284517c581\",\"dweb:/ipfs/Qmd6iMX9qLdFsfy6QFmHN8dAWVK2TasZn4uHPkz939aXDT\"]},\"test/foundry/types/harnesses/LeftRightHarness.sol\":{\"keccak256\":\"0x2380a69bcca2f8099e3313136107e14629e8eac67e20911ed123dcb70adba0b5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://068fd3c2c1839c93a7ab66a7453b9e665a003a55e6f3e3847eb99d3da55d7005\",\"dweb:/ipfs/QmYvP59hvrmY2YRjhnk84dEocA8TfFiUAixgNiBjwfRMph\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CastingError"},{"inputs":[],"type":"error","name":"LeftRightInputError"},{"inputs":[],"type":"error","name":"UnderOverFlow"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"stateMutability":"view","type":"function","name":"add","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"int256","name":"x","type":"int256"},{"internalType":"int256","name":"y","type":"int256"}],"stateMutability":"view","type":"function","name":"add","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"}],"stateMutability":"view","type":"function","name":"leftSlot","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"}],"stateMutability":"view","type":"function","name":"leftSlot","outputs":[{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"}],"stateMutability":"view","type":"function","name":"rightSlot","outputs":[{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"}],"stateMutability":"view","type":"function","name":"rightSlot","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[{"internalType":"int256","name":"x","type":"int256"},{"internalType":"int256","name":"y","type":"int256"}],"stateMutability":"view","type":"function","name":"sub","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"}],"stateMutability":"view","type":"function","name":"toInt128","outputs":[{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"}],"stateMutability":"view","type":"function","name":"toInt256","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"},{"internalType":"int128","name":"left","type":"int128"}],"stateMutability":"view","type":"function","name":"toLeftSlot","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"},{"internalType":"uint128","name":"left","type":"uint128"}],"stateMutability":"view","type":"function","name":"toLeftSlot","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"},{"internalType":"uint128","name":"left","type":"uint128"}],"stateMutability":"view","type":"function","name":"toLeftSlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"},{"internalType":"uint128","name":"right","type":"uint128"}],"stateMutability":"view","type":"function","name":"toRightSlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"},{"internalType":"int128","name":"right","type":"int128"}],"stateMutability":"view","type":"function","name":"toRightSlot","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"},{"internalType":"int128","name":"right","type":"int128"}],"stateMutability":"view","type":"function","name":"toRightSlot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"int256","name":"self","type":"int256"},{"internalType":"uint128","name":"right","type":"uint128"}],"stateMutability":"view","type":"function","name":"toRightSlot","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"self","type":"uint256"}],"stateMutability":"view","type":"function","name":"toUint128","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]}],"devdoc":{"kind":"dev","methods":{"add(int256,int256)":{"params":{"x":"the augend","y":"the addend"},"returns":{"_0":"z the sum x + y"}},"add(uint256,uint256)":{"params":{"x":"the augend","y":"the addend"},"returns":{"_0":"z the sum x + y"}},"leftSlot(int256)":{"params":{"self":"The int256 (full 256 bits) to be cut in its left half."},"returns":{"_0":"the left half (128 bits)."}},"leftSlot(uint256)":{"params":{"self":"The uint256 (full 256 bits) to be cut in its left half."},"returns":{"_0":"the left half (128 bits)."}},"rightSlot(int256)":{"params":{"self":"The int256 (full 256 bits) to be cut in its right half."},"returns":{"_0":"the right half self (128 bits)."}},"rightSlot(uint256)":{"params":{"self":"The uint256 (full 256 bits) to be cut in its right half."},"returns":{"_0":"the right half of self (128 bits)."}},"sub(int256,int256)":{"params":{"x":"the minuend","y":"the subtrahend"},"returns":{"_0":"z the difference x - y"}},"toInt128(int256)":{"params":{"self":"the int256 to be downcasted to int128."},"returns":{"_0":"selfAsInt128 the downcasted integer, now of type int128"}},"toInt256(uint256)":{"params":{"self":"the uint256 to be downcasted to uint128."},"returns":{"_0":"the incoming uint256 but now of type int256."}},"toLeftSlot(int256,int128)":{"params":{"left":"the bit pattern to write into the full pattern in the right half.","self":"the original full int256 bit pattern to be written to."},"returns":{"_0":"self with left added to its left 128 bits."}},"toLeftSlot(int256,uint128)":{"params":{"left":"the bit pattern to write into the full pattern in the right half.","self":"the original full int256 bit pattern to be written to."},"returns":{"_0":"self with left added to its left 128 bits."}},"toLeftSlot(uint256,uint128)":{"params":{"left":"the bit pattern to write into the full pattern in the right half.","self":"the original full uint256 bit pattern to be written to."},"returns":{"_0":"self with left added to its left 128 bits."}},"toRightSlot(int256,int128)":{"params":{"right":"the bit pattern to write into the full pattern in the right half.","self":"the original full int256 bit pattern to be written to."},"returns":{"_0":"self with right added to its right 128 bits."}},"toRightSlot(int256,uint128)":{"params":{"right":"the bit pattern to write into the full pattern in the right half.","self":"the original full int256 bit pattern to be written to."},"returns":{"_0":"self with right added to its right 128 bits."}},"toRightSlot(uint256,int128)":{"params":{"right":"the bit pattern to write into the full pattern in the right half.","self":"the original full uint256 bit pattern to be written to."},"returns":{"_0":"self with right added to its right 128 bits."}},"toRightSlot(uint256,uint128)":{"params":{"right":"the bit pattern to write into the full pattern in the right half.","self":"the original full uint256 bit pattern to be written to."},"returns":{"_0":"self with incoming right added (not overwritten, but added) to its right 128 bits."}},"toUint128(uint256)":{"params":{"self":"the uint256 to be downcasted to uint128."},"returns":{"_0":"selfAsUint128 the downcasted uint256 now as uint128"}}},"version":1},"userdoc":{"kind":"user","methods":{"add(int256,int256)":{"notice":"Add two int256 bit LeftRight-encoded words; revert on overflow."},"add(uint256,uint256)":{"notice":"Add two uint256 bit LeftRight-encoded words; revert on overflow or underflow."},"leftSlot(int256)":{"notice":"Get the \"left\" half from an int256 bit pattern."},"leftSlot(uint256)":{"notice":"Get the \"left\" half from a uint256 bit pattern."},"rightSlot(int256)":{"notice":"Get the \"right\" slot from an int256 bit pattern."},"rightSlot(uint256)":{"notice":"Get the \"right\" slot from a uint256 bit pattern."},"sub(int256,int256)":{"notice":"Subtract two int256 bit LeftRight-encoded words; revert on overflow."},"toInt128(int256)":{"notice":"Cast an int256 to an int128, revert on overflow or underflow."},"toInt256(uint256)":{"notice":"Cast a uint256 to an int256, revert on overflow"},"toLeftSlot(int256,int128)":{"notice":"Write the \"left\" slot to an int256 bit pattern."},"toLeftSlot(int256,uint128)":{"notice":"Write the \"left\" slot to an int256 bit pattern."},"toLeftSlot(uint256,uint128)":{"notice":"Write the \"left\" slot to a uint256 bit pattern."},"toRightSlot(int256,int128)":{"notice":"Write the \"right\" slot to an int256."},"toRightSlot(int256,uint128)":{"notice":"Write the \"right\" slot to an int256."},"toRightSlot(uint256,int128)":{"notice":"Write the \"right\" slot to a uint256."},"toRightSlot(uint256,uint128)":{"notice":"Write the \"right\" slot to a uint256."},"toUint128(uint256)":{"notice":"Downcast uint256 to a uint128, revert on overflow"}},"version":1}},"settings":{"remappings":["@contracts/=contracts/","@libraries/=contracts/libraries/","@multicall/=contracts/multicall/","@openzeppelin/=lib/openzeppelin-contracts/","@periphery/=contracts/periphery/","@scripts/=scripts/","@testUtils/=test/foundry/testUtils/","@tokens/=contracts/tokens/","@types/=contracts/types/","@uniswap/=lib/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/","univ3-core/=lib/v3-core/contracts/","univ3-periphery/=lib/v3-periphery/contracts/","v3-core/=lib/v3-core/contracts/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":18000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/foundry/types/harnesses/LeftRightHarness.sol":"LeftRightHarness"},"libraries":{}},"sources":{"contracts/libraries/Errors.sol":{"keccak256":"0xc726df9eeff396c5f90d831ce0f22d13c1373efdc729418d58ab534b403d86fc","urls":["bzz-raw://a8e98110a218b49dac5c8e0ab99892be1d3b4baf7490293314ff09e3eac14da7","dweb:/ipfs/QmbSgGUiWfuN4mgghXpuPnVjYFL3pQkncv6FXoHWb8Wocv"],"license":"GPL-2.0-or-later"},"contracts/types/LeftRight.sol":{"keccak256":"0x66c7c6b550e11319f5e3b6ac45e4dc4bf12a2e3fae6c9ea5cf8a749fce343f2f","urls":["bzz-raw://488ee146168449606092504247b1ff89e47a12509a6af89e028e64284517c581","dweb:/ipfs/Qmd6iMX9qLdFsfy6QFmHN8dAWVK2TasZn4uHPkz939aXDT"],"license":"GPL-2.0-or-later"},"test/foundry/types/harnesses/LeftRightHarness.sol":{"keccak256":"0x2380a69bcca2f8099e3313136107e14629e8eac67e20911ed123dcb70adba0b5","urls":["bzz-raw://068fd3c2c1839c93a7ab66a7453b9e665a003a55e6f3e3847eb99d3da55d7005","dweb:/ipfs/QmYvP59hvrmY2YRjhnk84dEocA8TfFiUAixgNiBjwfRMph"],"license":"UNLICENSED"}},"version":1},"ast":{"absolutePath":"test/foundry/types/harnesses/LeftRightHarness.sol","id":83025,"exportedSymbols":{"LeftRight":[5031],"LeftRightHarness":[83024]},"nodeType":"SourceUnit","src":"39:8314:89","nodes":[{"id":82684,"nodeType":"PragmaDirective","src":"39:23:89","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":82686,"nodeType":"ImportDirective","src":"64:47:89","nodes":[],"absolutePath":"contracts/types/LeftRight.sol","file":"@types/LeftRight.sol","nameLocation":"-1:-1:-1","scope":83025,"sourceUnit":5032,"symbolAliases":[{"foreign":{"id":82685,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"72:9:89","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":83024,"nodeType":"ContractDefinition","src":"342:8010:89","nodes":[{"id":82705,"nodeType":"FunctionDefinition","src":"760:135:89","nodes":[],"body":{"id":82704,"nodeType":"Block","src":"823:72:89","nodes":[],"statements":[{"assignments":[82696],"declarations":[{"constant":false,"id":82696,"mutability":"mutable","name":"r","nameLocation":"841:1:89","nodeType":"VariableDeclaration","scope":82704,"src":"833:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82695,"name":"uint128","nodeType":"ElementaryTypeName","src":"833:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":82701,"initialValue":{"arguments":[{"id":82699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82690,"src":"865:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":82697,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"845:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"855:9:89","memberName":"rightSlot","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"845:19:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256) pure returns (uint128)"}},"id":82700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:25:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"833:37:89"},{"expression":{"id":82702,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82696,"src":"887:1:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":82694,"id":82703,"nodeType":"Return","src":"880:8:89"}]},"documentation":{"id":82688,"nodeType":"StructuredDocumentation","src":"554:201:89","text":" @notice Get the \"right\" slot from a uint256 bit pattern.\n @param self The uint256 (full 256 bits) to be cut in its right half.\n @return the right half of self (128 bits)."},"functionSelector":"eb10f672","implemented":true,"kind":"function","modifiers":[],"name":"rightSlot","nameLocation":"769:9:89","parameters":{"id":82691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82690,"mutability":"mutable","name":"self","nameLocation":"787:4:89","nodeType":"VariableDeclaration","scope":82705,"src":"779:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82689,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"778:14:89"},"returnParameters":{"id":82694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82705,"src":"814:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82692,"name":"uint128","nodeType":"ElementaryTypeName","src":"814:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"813:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82723,"nodeType":"FunctionDefinition","src":"1103:132:89","nodes":[],"body":{"id":82722,"nodeType":"Block","src":"1164:71:89","nodes":[],"statements":[{"assignments":[82714],"declarations":[{"constant":false,"id":82714,"mutability":"mutable","name":"r","nameLocation":"1181:1:89","nodeType":"VariableDeclaration","scope":82722,"src":"1174:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82713,"name":"int128","nodeType":"ElementaryTypeName","src":"1174:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":82719,"initialValue":{"arguments":[{"id":82717,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82708,"src":"1205:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":82715,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"1185:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1195:9:89","memberName":"rightSlot","nodeType":"MemberAccess","referencedDeclaration":4569,"src":"1185:19:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":82718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1185:25:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"1174:36:89"},{"expression":{"id":82720,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82714,"src":"1227:1:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":82712,"id":82721,"nodeType":"Return","src":"1220:8:89"}]},"documentation":{"id":82706,"nodeType":"StructuredDocumentation","src":"901:197:89","text":" @notice Get the \"right\" slot from an int256 bit pattern.\n @param self The int256 (full 256 bits) to be cut in its right half.\n @return the right half self (128 bits)."},"functionSelector":"cfe7dcd1","implemented":true,"kind":"function","modifiers":[],"name":"rightSlot","nameLocation":"1112:9:89","parameters":{"id":82709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82708,"mutability":"mutable","name":"self","nameLocation":"1129:4:89","nodeType":"VariableDeclaration","scope":82723,"src":"1122:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82707,"name":"int256","nodeType":"ElementaryTypeName","src":"1122:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1121:13:89"},"returnParameters":{"id":82712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82723,"src":"1156:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82710,"name":"int128","nodeType":"ElementaryTypeName","src":"1156:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1155:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82744,"nodeType":"FunctionDefinition","src":"1905:161:89","nodes":[],"body":{"id":82743,"nodeType":"Block","src":"1985:81:89","nodes":[],"statements":[{"assignments":[82734],"declarations":[{"constant":false,"id":82734,"mutability":"mutable","name":"r","nameLocation":"2003:1:89","nodeType":"VariableDeclaration","scope":82743,"src":"1995:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":82740,"initialValue":{"arguments":[{"id":82737,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82726,"src":"2029:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":82738,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82728,"src":"2035:5:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":82735,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"2007:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2017:11:89","memberName":"toRightSlot","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"2007:21:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint128_$returns$_t_uint256_$","typeString":"function (uint256,uint128) pure returns (uint256)"}},"id":82739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:34:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1995:46:89"},{"expression":{"id":82741,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82734,"src":"2058:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82732,"id":82742,"nodeType":"Return","src":"2051:8:89"}]},"documentation":{"id":82724,"nodeType":"StructuredDocumentation","src":"1578:322:89","text":" @notice Write the \"right\" slot to a uint256.\n @param self the original full uint256 bit pattern to be written to.\n @param right the bit pattern to write into the full pattern in the right half.\n @return self with incoming right added (not overwritten, but added) to its right 128 bits."},"functionSelector":"632c44df","implemented":true,"kind":"function","modifiers":[],"name":"toRightSlot","nameLocation":"1914:11:89","parameters":{"id":82729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82726,"mutability":"mutable","name":"self","nameLocation":"1934:4:89","nodeType":"VariableDeclaration","scope":82744,"src":"1926:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82728,"mutability":"mutable","name":"right","nameLocation":"1948:5:89","nodeType":"VariableDeclaration","scope":82744,"src":"1940:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82727,"name":"uint128","nodeType":"ElementaryTypeName","src":"1940:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1925:29:89"},"returnParameters":{"id":82732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82744,"src":"1976:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1975:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82765,"nodeType":"FunctionDefinition","src":"2361:160:89","nodes":[],"body":{"id":82764,"nodeType":"Block","src":"2440:81:89","nodes":[],"statements":[{"assignments":[82755],"declarations":[{"constant":false,"id":82755,"mutability":"mutable","name":"r","nameLocation":"2458:1:89","nodeType":"VariableDeclaration","scope":82764,"src":"2450:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2450:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":82761,"initialValue":{"arguments":[{"id":82758,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82747,"src":"2484:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":82759,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82749,"src":"2490:5:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":82756,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"2462:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2472:11:89","memberName":"toRightSlot","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"2462:21:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_int128_$returns$_t_uint256_$","typeString":"function (uint256,int128) pure returns (uint256)"}},"id":82760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2462:34:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2450:46:89"},{"expression":{"id":82762,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82755,"src":"2513:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82753,"id":82763,"nodeType":"Return","src":"2506:8:89"}]},"documentation":{"id":82745,"nodeType":"StructuredDocumentation","src":"2072:284:89","text":" @notice Write the \"right\" slot to a uint256.\n @param self the original full uint256 bit pattern to be written to.\n @param right the bit pattern to write into the full pattern in the right half.\n @return self with right added to its right 128 bits."},"functionSelector":"e08836b7","implemented":true,"kind":"function","modifiers":[],"name":"toRightSlot","nameLocation":"2370:11:89","parameters":{"id":82750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82747,"mutability":"mutable","name":"self","nameLocation":"2390:4:89","nodeType":"VariableDeclaration","scope":82765,"src":"2382:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2382:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82749,"mutability":"mutable","name":"right","nameLocation":"2403:5:89","nodeType":"VariableDeclaration","scope":82765,"src":"2396:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82748,"name":"int128","nodeType":"ElementaryTypeName","src":"2396:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"2381:28:89"},"returnParameters":{"id":82753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82765,"src":"2431:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2431:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82786,"nodeType":"FunctionDefinition","src":"2815:158:89","nodes":[],"body":{"id":82785,"nodeType":"Block","src":"2893:80:89","nodes":[],"statements":[{"assignments":[82776],"declarations":[{"constant":false,"id":82776,"mutability":"mutable","name":"r","nameLocation":"2910:1:89","nodeType":"VariableDeclaration","scope":82785,"src":"2903:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82775,"name":"int256","nodeType":"ElementaryTypeName","src":"2903:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82782,"initialValue":{"arguments":[{"id":82779,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82768,"src":"2936:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82780,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82770,"src":"2942:5:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":82777,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"2914:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:11:89","memberName":"toRightSlot","nodeType":"MemberAccess","referencedDeclaration":4641,"src":"2914:21:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_uint128_$returns$_t_int256_$","typeString":"function (int256,uint128) pure returns (int256)"}},"id":82781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2914:34:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2903:45:89"},{"expression":{"id":82783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82776,"src":"2965:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82774,"id":82784,"nodeType":"Return","src":"2958:8:89"}]},"documentation":{"id":82766,"nodeType":"StructuredDocumentation","src":"2527:283:89","text":" @notice Write the \"right\" slot to an int256.\n @param self the original full int256 bit pattern to be written to.\n @param right the bit pattern to write into the full pattern in the right half.\n @return self with right added to its right 128 bits."},"functionSelector":"e265e723","implemented":true,"kind":"function","modifiers":[],"name":"toRightSlot","nameLocation":"2824:11:89","parameters":{"id":82771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82768,"mutability":"mutable","name":"self","nameLocation":"2843:4:89","nodeType":"VariableDeclaration","scope":82786,"src":"2836:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82767,"name":"int256","nodeType":"ElementaryTypeName","src":"2836:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82770,"mutability":"mutable","name":"right","nameLocation":"2857:5:89","nodeType":"VariableDeclaration","scope":82786,"src":"2849:13:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82769,"name":"uint128","nodeType":"ElementaryTypeName","src":"2849:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2835:28:89"},"returnParameters":{"id":82774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82786,"src":"2885:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82772,"name":"int256","nodeType":"ElementaryTypeName","src":"2885:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2884:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82807,"nodeType":"FunctionDefinition","src":"3267:157:89","nodes":[],"body":{"id":82806,"nodeType":"Block","src":"3344:80:89","nodes":[],"statements":[{"assignments":[82797],"declarations":[{"constant":false,"id":82797,"mutability":"mutable","name":"r","nameLocation":"3361:1:89","nodeType":"VariableDeclaration","scope":82806,"src":"3354:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82796,"name":"int256","nodeType":"ElementaryTypeName","src":"3354:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82803,"initialValue":{"arguments":[{"id":82800,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82789,"src":"3387:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82801,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82791,"src":"3393:5:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":82798,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"3365:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:11:89","memberName":"toRightSlot","nodeType":"MemberAccess","referencedDeclaration":4663,"src":"3365:21:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int128_$returns$_t_int256_$","typeString":"function (int256,int128) pure returns (int256)"}},"id":82802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:34:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"3354:45:89"},{"expression":{"id":82804,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82797,"src":"3416:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82795,"id":82805,"nodeType":"Return","src":"3409:8:89"}]},"documentation":{"id":82787,"nodeType":"StructuredDocumentation","src":"2979:283:89","text":" @notice Write the \"right\" slot to an int256.\n @param self the original full int256 bit pattern to be written to.\n @param right the bit pattern to write into the full pattern in the right half.\n @return self with right added to its right 128 bits."},"functionSelector":"78e38789","implemented":true,"kind":"function","modifiers":[],"name":"toRightSlot","nameLocation":"3276:11:89","parameters":{"id":82792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82789,"mutability":"mutable","name":"self","nameLocation":"3295:4:89","nodeType":"VariableDeclaration","scope":82807,"src":"3288:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82788,"name":"int256","nodeType":"ElementaryTypeName","src":"3288:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82791,"mutability":"mutable","name":"right","nameLocation":"3308:5:89","nodeType":"VariableDeclaration","scope":82807,"src":"3301:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82790,"name":"int128","nodeType":"ElementaryTypeName","src":"3301:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3287:27:89"},"returnParameters":{"id":82795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82807,"src":"3336:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82793,"name":"int256","nodeType":"ElementaryTypeName","src":"3336:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3335:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82825,"nodeType":"FunctionDefinition","src":"3804:133:89","nodes":[],"body":{"id":82824,"nodeType":"Block","src":"3866:71:89","nodes":[],"statements":[{"assignments":[82816],"declarations":[{"constant":false,"id":82816,"mutability":"mutable","name":"r","nameLocation":"3884:1:89","nodeType":"VariableDeclaration","scope":82824,"src":"3876:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82815,"name":"uint128","nodeType":"ElementaryTypeName","src":"3876:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":82821,"initialValue":{"arguments":[{"id":82819,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82810,"src":"3907:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":82817,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"3888:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3898:8:89","memberName":"leftSlot","nodeType":"MemberAccess","referencedDeclaration":4679,"src":"3888:18:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256) pure returns (uint128)"}},"id":82820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3888:24:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"3876:36:89"},{"expression":{"id":82822,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82816,"src":"3929:1:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":82814,"id":82823,"nodeType":"Return","src":"3922:8:89"}]},"documentation":{"id":82808,"nodeType":"StructuredDocumentation","src":"3609:190:89","text":" @notice Get the \"left\" half from a uint256 bit pattern.\n @param self The uint256 (full 256 bits) to be cut in its left half.\n @return the left half (128 bits)."},"functionSelector":"c1ac56fc","implemented":true,"kind":"function","modifiers":[],"name":"leftSlot","nameLocation":"3813:8:89","parameters":{"id":82811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82810,"mutability":"mutable","name":"self","nameLocation":"3830:4:89","nodeType":"VariableDeclaration","scope":82825,"src":"3822:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3821:14:89"},"returnParameters":{"id":82814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82825,"src":"3857:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82812,"name":"uint128","nodeType":"ElementaryTypeName","src":"3857:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3856:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82843,"nodeType":"FunctionDefinition","src":"4137:130:89","nodes":[],"body":{"id":82842,"nodeType":"Block","src":"4197:70:89","nodes":[],"statements":[{"assignments":[82834],"declarations":[{"constant":false,"id":82834,"mutability":"mutable","name":"r","nameLocation":"4214:1:89","nodeType":"VariableDeclaration","scope":82842,"src":"4207:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82833,"name":"int128","nodeType":"ElementaryTypeName","src":"4207:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":82839,"initialValue":{"arguments":[{"id":82837,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82828,"src":"4237:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":82835,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"4218:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4228:8:89","memberName":"leftSlot","nodeType":"MemberAccess","referencedDeclaration":4695,"src":"4218:18:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":82838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4218:24:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"4207:35:89"},{"expression":{"id":82840,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82834,"src":"4259:1:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":82832,"id":82841,"nodeType":"Return","src":"4252:8:89"}]},"documentation":{"id":82826,"nodeType":"StructuredDocumentation","src":"3943:189:89","text":" @notice Get the \"left\" half from an int256 bit pattern.\n @param self The int256 (full 256 bits) to be cut in its left half.\n @return the left half (128 bits)."},"functionSelector":"f93ab7d5","implemented":true,"kind":"function","modifiers":[],"name":"leftSlot","nameLocation":"4146:8:89","parameters":{"id":82829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82828,"mutability":"mutable","name":"self","nameLocation":"4162:4:89","nodeType":"VariableDeclaration","scope":82843,"src":"4155:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82827,"name":"int256","nodeType":"ElementaryTypeName","src":"4155:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4154:13:89"},"returnParameters":{"id":82832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82843,"src":"4189:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82830,"name":"int128","nodeType":"ElementaryTypeName","src":"4189:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4188:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82864,"nodeType":"FunctionDefinition","src":"4905:157:89","nodes":[],"body":{"id":82863,"nodeType":"Block","src":"4983:79:89","nodes":[],"statements":[{"assignments":[82854],"declarations":[{"constant":false,"id":82854,"mutability":"mutable","name":"r","nameLocation":"5001:1:89","nodeType":"VariableDeclaration","scope":82863,"src":"4993:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82853,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":82860,"initialValue":{"arguments":[{"id":82857,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82846,"src":"5026:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":82858,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82848,"src":"5032:4:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":82855,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"5005:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5015:10:89","memberName":"toLeftSlot","nodeType":"MemberAccess","referencedDeclaration":4717,"src":"5005:20:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint128_$returns$_t_uint256_$","typeString":"function (uint256,uint128) pure returns (uint256)"}},"id":82859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5005:32:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4993:44:89"},{"expression":{"id":82861,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82854,"src":"5054:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82852,"id":82862,"nodeType":"Return","src":"5047:8:89"}]},"documentation":{"id":82844,"nodeType":"StructuredDocumentation","src":"4608:292:89","text":" @notice Write the \"left\" slot to a uint256 bit pattern.\n @param self the original full uint256 bit pattern to be written to.\n @param left the bit pattern to write into the full pattern in the right half.\n @return self with left added to its left 128 bits."},"functionSelector":"ed38fd4b","implemented":true,"kind":"function","modifiers":[],"name":"toLeftSlot","nameLocation":"4914:10:89","parameters":{"id":82849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82846,"mutability":"mutable","name":"self","nameLocation":"4933:4:89","nodeType":"VariableDeclaration","scope":82864,"src":"4925:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82848,"mutability":"mutable","name":"left","nameLocation":"4947:4:89","nodeType":"VariableDeclaration","scope":82864,"src":"4939:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82847,"name":"uint128","nodeType":"ElementaryTypeName","src":"4939:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"4924:28:89"},"returnParameters":{"id":82852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82864,"src":"4974:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82850,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4973:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82885,"nodeType":"FunctionDefinition","src":"5364:154:89","nodes":[],"body":{"id":82884,"nodeType":"Block","src":"5440:78:89","nodes":[],"statements":[{"assignments":[82875],"declarations":[{"constant":false,"id":82875,"mutability":"mutable","name":"r","nameLocation":"5457:1:89","nodeType":"VariableDeclaration","scope":82884,"src":"5450:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82874,"name":"int256","nodeType":"ElementaryTypeName","src":"5450:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82881,"initialValue":{"arguments":[{"id":82878,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82867,"src":"5482:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82879,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82869,"src":"5488:4:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":82876,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"5461:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5471:10:89","memberName":"toLeftSlot","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"5461:20:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_uint128_$returns$_t_int256_$","typeString":"function (int256,uint128) pure returns (int256)"}},"id":82880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5461:32:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5450:43:89"},{"expression":{"id":82882,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82875,"src":"5510:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82873,"id":82883,"nodeType":"Return","src":"5503:8:89"}]},"documentation":{"id":82865,"nodeType":"StructuredDocumentation","src":"5068:291:89","text":" @notice Write the \"left\" slot to an int256 bit pattern.\n @param self the original full int256 bit pattern to be written to.\n @param left the bit pattern to write into the full pattern in the right half.\n @return self with left added to its left 128 bits."},"functionSelector":"32ee4ff4","implemented":true,"kind":"function","modifiers":[],"name":"toLeftSlot","nameLocation":"5373:10:89","parameters":{"id":82870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82867,"mutability":"mutable","name":"self","nameLocation":"5391:4:89","nodeType":"VariableDeclaration","scope":82885,"src":"5384:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82866,"name":"int256","nodeType":"ElementaryTypeName","src":"5384:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82869,"mutability":"mutable","name":"left","nameLocation":"5405:4:89","nodeType":"VariableDeclaration","scope":82885,"src":"5397:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82868,"name":"uint128","nodeType":"ElementaryTypeName","src":"5397:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5383:27:89"},"returnParameters":{"id":82873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82885,"src":"5432:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82871,"name":"int256","nodeType":"ElementaryTypeName","src":"5432:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5431:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82906,"nodeType":"FunctionDefinition","src":"5820:153:89","nodes":[],"body":{"id":82905,"nodeType":"Block","src":"5895:78:89","nodes":[],"statements":[{"assignments":[82896],"declarations":[{"constant":false,"id":82896,"mutability":"mutable","name":"r","nameLocation":"5912:1:89","nodeType":"VariableDeclaration","scope":82905,"src":"5905:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82895,"name":"int256","nodeType":"ElementaryTypeName","src":"5905:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82902,"initialValue":{"arguments":[{"id":82899,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82888,"src":"5937:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82900,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82890,"src":"5943:4:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":82897,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"5916:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5926:10:89","memberName":"toLeftSlot","nodeType":"MemberAccess","referencedDeclaration":4764,"src":"5916:20:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int128_$returns$_t_int256_$","typeString":"function (int256,int128) pure returns (int256)"}},"id":82901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:32:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5905:43:89"},{"expression":{"id":82903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82896,"src":"5965:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82894,"id":82904,"nodeType":"Return","src":"5958:8:89"}]},"documentation":{"id":82886,"nodeType":"StructuredDocumentation","src":"5524:291:89","text":" @notice Write the \"left\" slot to an int256 bit pattern.\n @param self the original full int256 bit pattern to be written to.\n @param left the bit pattern to write into the full pattern in the right half.\n @return self with left added to its left 128 bits."},"functionSelector":"20715ad8","implemented":true,"kind":"function","modifiers":[],"name":"toLeftSlot","nameLocation":"5829:10:89","parameters":{"id":82891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82888,"mutability":"mutable","name":"self","nameLocation":"5847:4:89","nodeType":"VariableDeclaration","scope":82906,"src":"5840:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82887,"name":"int256","nodeType":"ElementaryTypeName","src":"5840:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82890,"mutability":"mutable","name":"left","nameLocation":"5860:4:89","nodeType":"VariableDeclaration","scope":82906,"src":"5853:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82889,"name":"int128","nodeType":"ElementaryTypeName","src":"5853:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"5839:26:89"},"returnParameters":{"id":82894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82906,"src":"5887:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82892,"name":"int256","nodeType":"ElementaryTypeName","src":"5887:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5886:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82927,"nodeType":"FunctionDefinition","src":"6353:131:89","nodes":[],"body":{"id":82926,"nodeType":"Block","src":"6418:66:89","nodes":[],"statements":[{"assignments":[82917],"declarations":[{"constant":false,"id":82917,"mutability":"mutable","name":"r","nameLocation":"6436:1:89","nodeType":"VariableDeclaration","scope":82926,"src":"6428:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82916,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":82923,"initialValue":{"arguments":[{"id":82920,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82909,"src":"6454:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":82921,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82911,"src":"6457:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":82918,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"6440:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6450:3:89","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"6440:13:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":82922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6440:19:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6428:31:89"},{"expression":{"id":82924,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82917,"src":"6476:1:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82915,"id":82925,"nodeType":"Return","src":"6469:8:89"}]},"documentation":{"id":82907,"nodeType":"StructuredDocumentation","src":"6159:189:89","text":" @notice Add two uint256 bit LeftRight-encoded words; revert on overflow or underflow.\n @param x the augend\n @param y the addend\n @return z the sum x + y"},"functionSelector":"771602f7","implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6362:3:89","parameters":{"id":82912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82909,"mutability":"mutable","name":"x","nameLocation":"6374:1:89","nodeType":"VariableDeclaration","scope":82927,"src":"6366:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6366:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82911,"mutability":"mutable","name":"y","nameLocation":"6385:1:89","nodeType":"VariableDeclaration","scope":82927,"src":"6377:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82910,"name":"uint256","nodeType":"ElementaryTypeName","src":"6377:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6365:22:89"},"returnParameters":{"id":82915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82927,"src":"6409:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6409:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6408:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82948,"nodeType":"FunctionDefinition","src":"6670:127:89","nodes":[],"body":{"id":82947,"nodeType":"Block","src":"6732:65:89","nodes":[],"statements":[{"assignments":[82938],"declarations":[{"constant":false,"id":82938,"mutability":"mutable","name":"r","nameLocation":"6749:1:89","nodeType":"VariableDeclaration","scope":82947,"src":"6742:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82937,"name":"int256","nodeType":"ElementaryTypeName","src":"6742:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82944,"initialValue":{"arguments":[{"id":82941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82930,"src":"6767:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82942,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82932,"src":"6770:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":82939,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"6753:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6763:3:89","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4875,"src":"6753:13:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":82943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6753:19:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6742:30:89"},{"expression":{"id":82945,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82938,"src":"6789:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82936,"id":82946,"nodeType":"Return","src":"6782:8:89"}]},"documentation":{"id":82928,"nodeType":"StructuredDocumentation","src":"6490:175:89","text":" @notice Add two int256 bit LeftRight-encoded words; revert on overflow.\n @param x the augend\n @param y the addend\n @return z the sum x + y"},"functionSelector":"a5f3c23b","implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6679:3:89","parameters":{"id":82933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82930,"mutability":"mutable","name":"x","nameLocation":"6690:1:89","nodeType":"VariableDeclaration","scope":82948,"src":"6683:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82929,"name":"int256","nodeType":"ElementaryTypeName","src":"6683:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82932,"mutability":"mutable","name":"y","nameLocation":"6700:1:89","nodeType":"VariableDeclaration","scope":82948,"src":"6693:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82931,"name":"int256","nodeType":"ElementaryTypeName","src":"6693:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6682:20:89"},"returnParameters":{"id":82936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82948,"src":"6724:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82934,"name":"int256","nodeType":"ElementaryTypeName","src":"6724:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"6723:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82969,"nodeType":"FunctionDefinition","src":"7000:127:89","nodes":[],"body":{"id":82968,"nodeType":"Block","src":"7062:65:89","nodes":[],"statements":[{"assignments":[82959],"declarations":[{"constant":false,"id":82959,"mutability":"mutable","name":"r","nameLocation":"7079:1:89","nodeType":"VariableDeclaration","scope":82968,"src":"7072:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82958,"name":"int256","nodeType":"ElementaryTypeName","src":"7072:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":82965,"initialValue":{"arguments":[{"id":82962,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82951,"src":"7097:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":82963,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82953,"src":"7100:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":82960,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"7083:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7093:3:89","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4948,"src":"7083:13:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":82964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:19:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"7072:30:89"},{"expression":{"id":82966,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82959,"src":"7119:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":82957,"id":82967,"nodeType":"Return","src":"7112:8:89"}]},"documentation":{"id":82949,"nodeType":"StructuredDocumentation","src":"6803:192:89","text":" @notice Subtract two int256 bit LeftRight-encoded words; revert on overflow.\n @param x the minuend\n @param y the subtrahend\n @return z the difference x - y"},"functionSelector":"adefc37b","implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7009:3:89","parameters":{"id":82954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82951,"mutability":"mutable","name":"x","nameLocation":"7020:1:89","nodeType":"VariableDeclaration","scope":82969,"src":"7013:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82950,"name":"int256","nodeType":"ElementaryTypeName","src":"7013:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":82953,"mutability":"mutable","name":"y","nameLocation":"7030:1:89","nodeType":"VariableDeclaration","scope":82969,"src":"7023:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82952,"name":"int256","nodeType":"ElementaryTypeName","src":"7023:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7012:20:89"},"returnParameters":{"id":82957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82969,"src":"7054:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82955,"name":"int256","nodeType":"ElementaryTypeName","src":"7054:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7053:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":82987,"nodeType":"FunctionDefinition","src":"7535:130:89","nodes":[],"body":{"id":82986,"nodeType":"Block","src":"7595:70:89","nodes":[],"statements":[{"assignments":[82978],"declarations":[{"constant":false,"id":82978,"mutability":"mutable","name":"r","nameLocation":"7612:1:89","nodeType":"VariableDeclaration","scope":82986,"src":"7605:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82977,"name":"int128","nodeType":"ElementaryTypeName","src":"7605:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":82983,"initialValue":{"arguments":[{"id":82981,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82972,"src":"7635:4:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":82979,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"7616:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7626:8:89","memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":4974,"src":"7616:18:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":82982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:24:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"7605:35:89"},{"expression":{"id":82984,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82978,"src":"7657:1:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":82976,"id":82985,"nodeType":"Return","src":"7650:8:89"}]},"documentation":{"id":82970,"nodeType":"StructuredDocumentation","src":"7313:217:89","text":" @notice Cast an int256 to an int128, revert on overflow or underflow.\n @param self the int256 to be downcasted to int128.\n @return selfAsInt128 the downcasted integer, now of type int128"},"functionSelector":"dd2a0316","implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"7544:8:89","parameters":{"id":82973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82972,"mutability":"mutable","name":"self","nameLocation":"7560:4:89","nodeType":"VariableDeclaration","scope":82987,"src":"7553:11:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82971,"name":"int256","nodeType":"ElementaryTypeName","src":"7553:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7552:13:89"},"returnParameters":{"id":82976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82987,"src":"7587:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":82974,"name":"int128","nodeType":"ElementaryTypeName","src":"7587:6:89","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"7586:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":83005,"nodeType":"FunctionDefinition","src":"7879:135:89","nodes":[],"body":{"id":83004,"nodeType":"Block","src":"7942:72:89","nodes":[],"statements":[{"assignments":[82996],"declarations":[{"constant":false,"id":82996,"mutability":"mutable","name":"r","nameLocation":"7960:1:89","nodeType":"VariableDeclaration","scope":83004,"src":"7952:9:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82995,"name":"uint128","nodeType":"ElementaryTypeName","src":"7952:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":83001,"initialValue":{"arguments":[{"id":82999,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82990,"src":"7984:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":82997,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"7964:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":82998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7974:9:89","memberName":"toUint128","nodeType":"MemberAccess","referencedDeclaration":5000,"src":"7964:19:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256) pure returns (uint128)"}},"id":83000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:25:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"7952:37:89"},{"expression":{"id":83002,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82996,"src":"8006:1:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":82994,"id":83003,"nodeType":"Return","src":"7999:8:89"}]},"documentation":{"id":82988,"nodeType":"StructuredDocumentation","src":"7671:203:89","text":" @notice Downcast uint256 to a uint128, revert on overflow\n @param self the uint256 to be downcasted to uint128.\n @return selfAsUint128 the downcasted uint256 now as uint128"},"functionSelector":"809fdd33","implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"7888:9:89","parameters":{"id":82991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82990,"mutability":"mutable","name":"self","nameLocation":"7906:4:89","nodeType":"VariableDeclaration","scope":83005,"src":"7898:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82989,"name":"uint256","nodeType":"ElementaryTypeName","src":"7898:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7897:14:89"},"returnParameters":{"id":82994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":83005,"src":"7933:7:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":82992,"name":"uint128","nodeType":"ElementaryTypeName","src":"7933:7:89","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7932:9:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":83023,"nodeType":"FunctionDefinition","src":"8219:131:89","nodes":[],"body":{"id":83022,"nodeType":"Block","src":"8280:70:89","nodes":[],"statements":[{"assignments":[83014],"declarations":[{"constant":false,"id":83014,"mutability":"mutable","name":"r","nameLocation":"8297:1:89","nodeType":"VariableDeclaration","scope":83022,"src":"8290:8:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":83013,"name":"int256","nodeType":"ElementaryTypeName","src":"8290:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":83019,"initialValue":{"arguments":[{"id":83017,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83008,"src":"8320:4:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":83015,"name":"LeftRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"8301:9:89","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LeftRight_$5031_$","typeString":"type(library LeftRight)"}},"id":83016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8311:8:89","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5030,"src":"8301:18:89","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":83018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8301:24:89","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"8290:35:89"},{"expression":{"id":83020,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83014,"src":"8342:1:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":83012,"id":83021,"nodeType":"Return","src":"8335:8:89"}]},"documentation":{"id":83006,"nodeType":"StructuredDocumentation","src":"8020:194:89","text":" @notice Cast a uint256 to an int256, revert on overflow\n @param self the uint256 to be downcasted to uint128.\n @return the incoming uint256 but now of type int256."},"functionSelector":"dfbe873b","implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"8228:8:89","parameters":{"id":83009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83008,"mutability":"mutable","name":"self","nameLocation":"8245:4:89","nodeType":"VariableDeclaration","scope":83023,"src":"8237:12:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8237:7:89","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8236:14:89"},"returnParameters":{"id":83012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":83023,"src":"8272:6:89","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":83010,"name":"int256","nodeType":"ElementaryTypeName","src":"8272:6:89","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8271:8:89"},"scope":83024,"stateMutability":"view","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[],"canonicalName":"LeftRightHarness","contractDependencies":[],"contractKind":"contract","documentation":{"id":82687,"nodeType":"StructuredDocumentation","src":"113:229:89","text":"@title LeftRightHarness: A harness to expose the LeftRight library for code coverage analysis.\n @notice Replicates the interface of the LeftRight library, passing through any function calls\n @author Axicon Labs Limited"},"fullyImplemented":true,"linearizedBaseContracts":[83024],"name":"LeftRightHarness","nameLocation":"351:16:89","scope":83025,"usedErrors":[2471,2485,2512]}],"license":"UNLICENSED"},"id":89}