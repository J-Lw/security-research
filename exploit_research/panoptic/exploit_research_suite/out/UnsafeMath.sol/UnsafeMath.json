{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edd9faa3be06025e95d4ec5c69548ef0176a027678726a3f3f136e93c063629764736f6c63430008120033","sourceMap":"244:415:65:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:415:65;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edd9faa3be06025e95d4ec5c69548ef0176a027678726a3f3f136e93c063629764736f6c63430008120033","sourceMap":"244:415:65:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":\"UnsafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":18000},\"remappings\":[\":@contracts/=contracts/\",\":@libraries/=contracts/libraries/\",\":@multicall/=contracts/multicall/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@periphery/=contracts/periphery/\",\":@scripts/=scripts/\",\":@testUtils/=test/foundry/testUtils/\",\":@tokens/=contracts/tokens/\",\":@types/=contracts/types/\",\":@uniswap/=lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":univ3-core/=lib/v3-core/contracts/\",\":univ3-periphery/=lib/v3-periphery/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@contracts/=contracts/","@libraries/=contracts/libraries/","@multicall/=contracts/multicall/","@openzeppelin/=lib/openzeppelin-contracts/","@periphery/=contracts/periphery/","@scripts/=scripts/","@testUtils/=test/foundry/testUtils/","@tokens/=contracts/tokens/","@types/=contracts/types/","@uniswap/=lib/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/","univ3-core/=lib/v3-core/contracts/","univ3-periphery/=lib/v3-periphery/contracts/","v3-core/=lib/v3-core/contracts/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":18000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v3-core/contracts/libraries/UnsafeMath.sol":"UnsafeMath"},"libraries":{}},"sources":{"lib/v3-core/contracts/libraries/UnsafeMath.sol":{"keccak256":"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88","urls":["bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496","dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"lib/v3-core/contracts/libraries/UnsafeMath.sol","id":53728,"exportedSymbols":{"UnsafeMath":[53727]},"nodeType":"SourceUnit","src":"45:615:65","nodes":[{"id":53713,"nodeType":"PragmaDirective","src":"45:24:65","nodes":[],"literals":["solidity",">=","0.5",".0"]},{"id":53727,"nodeType":"ContractDefinition","src":"244:415:65","nodes":[{"id":53726,"nodeType":"FunctionDefinition","src":"492:165:65","nodes":[],"body":{"id":53725,"nodeType":"Block","src":"571:86:65","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"590:61:65","statements":[{"nodeType":"YulAssignment","src":"604:37:65","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"617:1:65"},{"name":"y","nodeType":"YulIdentifier","src":"620:1:65"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"613:3:65"},"nodeType":"YulFunctionCall","src":"613:9:65"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"631:1:65"},{"name":"y","nodeType":"YulIdentifier","src":"634:1:65"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"627:3:65"},"nodeType":"YulFunctionCall","src":"627:9:65"},{"kind":"number","nodeType":"YulLiteral","src":"638:1:65","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"624:2:65"},"nodeType":"YulFunctionCall","src":"624:16:65"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:65"},"nodeType":"YulFunctionCall","src":"609:32:65"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"604:1:65"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":53717,"isOffset":false,"isSlot":false,"src":"617:1:65","valueSize":1},{"declaration":53717,"isOffset":false,"isSlot":false,"src":"631:1:65","valueSize":1},{"declaration":53719,"isOffset":false,"isSlot":false,"src":"620:1:65","valueSize":1},{"declaration":53719,"isOffset":false,"isSlot":false,"src":"634:1:65","valueSize":1},{"declaration":53722,"isOffset":false,"isSlot":false,"src":"604:1:65","valueSize":1}],"id":53724,"nodeType":"InlineAssembly","src":"581:70:65"}]},"documentation":{"id":53715,"nodeType":"StructuredDocumentation","src":"269:218:65","text":"@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"},"implemented":true,"kind":"function","modifiers":[],"name":"divRoundingUp","nameLocation":"501:13:65","parameters":{"id":53720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53717,"mutability":"mutable","name":"x","nameLocation":"523:1:65","nodeType":"VariableDeclaration","scope":53726,"src":"515:9:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53716,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53719,"mutability":"mutable","name":"y","nameLocation":"534:1:65","nodeType":"VariableDeclaration","scope":53726,"src":"526:9:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53718,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"514:22:65"},"returnParameters":{"id":53723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53722,"mutability":"mutable","name":"z","nameLocation":"568:1:65","nodeType":"VariableDeclaration","scope":53726,"src":"560:9:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53721,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:65","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"559:11:65"},"scope":53727,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"UnsafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":53714,"nodeType":"StructuredDocumentation","src":"71:173:65","text":"@title Math functions that do not check inputs or outputs\n @notice Contains methods that perform common math functions but do not do any overflow or underflow checks"},"fullyImplemented":true,"linearizedBaseContracts":[53727],"name":"UnsafeMath","nameLocation":"252:10:65","scope":53728,"usedErrors":[]}],"license":"GPL-2.0-or-later"},"id":65}